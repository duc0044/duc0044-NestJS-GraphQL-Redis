# docker-compose.full.yml - Complete setup with MySQL and Redis

services:
  # MySQL Service
  mysql:
    image: mysql:8.0
    container_name: mysql-server
    ports:
      - '3307:3306'
    environment:
      MYSQL_ROOT_PASSWORD: 140204
      MYSQL_DATABASE: test
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    networks:
      - duc0044-network

  # Redis Service
  redis:
    image: redis:7.4.0-alpine
    container_name: redis-server
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --requirepass duc0044
    restart: unless-stopped
    networks:
      - duc0044-network

  # phpMyAdmin (GUI for MySQL)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin-duc0044
    ports:
      - '8080:80'
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: 140204
    depends_on:
      - mysql
    restart: unless-stopped
    networks:
      - duc0044-network

  # Redis Commander (GUI for Redis)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-duc0044
    ports:
      - '8081:8081'
    environment:
      REDIS_HOSTS: local:redis:6379:0:duc0044
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - duc0044-network

volumes:
  mysql-data:
  redis-data:

networks:
  duc0044-network:
    driver: bridge
