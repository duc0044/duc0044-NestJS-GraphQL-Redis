# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthUserDto {
  email: String!
  id: Int!
  name: String!
  password: String
}

type Comment {
  author: User!
  content: String!
  createdAt: DateTime!
  id: Int!
  post: Post!
}

input CreateCommentInput {
  authorId: Int!
  content: String!
  postId: Int!
}

input CreatePostInput {
  authorId: Int!
  content: String!
  title: String!
}

input CreateUserInput {
  email: String!
  name: String!
  password: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input LoginInput {
  email: String!
  password: String!
}

type LoginResponse {
  access_token: String!
}

type Mutation {
  clearAllCache: String!
  createComment(createCommentInput: CreateCommentInput!): Comment!
  createPost(createPostInput: CreatePostInput!): Post!
  createUser(user: CreateUserInput!): UserResponse!
  deleteCache(key: String!): Float!
  deletePost(id: Float!): Post!
  deleteUser(id: Float!): UserResponse!
  login(loginInput: LoginInput!): LoginResponse!
  setCache(key: String!, ttl: Float, value: String!): String!
  setExpire(key: String!, seconds: Float!): Float!
  signup(createUserInput: CreateUserInput!): User!
  updatePost(updatePostInput: UpdatePostInput!): Post!
  updateUser(user: UpdateUserInput!): UserResponse!
}

type Post {
  author: User!
  comments: [Comment!]!
  content: String!
  createdAt: DateTime!
  id: Int!
  title: String!
}

type Query {
  commentsByPost(postId: Int!): [Comment!]!
  getCache(key: String!): String
  getKeys(pattern: String!): [String!]!
  getTtl(key: String!): Float!
  post(id: Float!): Post
  posts: [Post!]!
  redisPing: String!
  user(id: Float!): User
  users: [User!]!
  whoAmI: AuthUserDto!
}

input UpdatePostInput {
  authorId: Int
  content: String
  id: Int!
  title: String
}

input UpdateUserInput {
  email: String
  id: ID!
  name: String
  password: String
}

type User {
  comments: [Comment!]!
  createdAt: DateTime!
  email: String!
  id: Int!
  name: String!
  posts: [Post!]!
}

type UserResponse {
  message: String!
  user: User
  users: [User!]
}